<svg width="500" height="400" id ="svg_default"></svg> <!-- cambiare width e height dinamicamente per funzione zoom-->

var svg = d3.select("#svg"),
            margin = 200,
            width = svg.attr("width") - margin, //300
            height = svg.attr("height") - margin //200

        var g = svg.append("g")
        .attr("transform", "translate(" + 100 + "," + 100 + ")");


        var xScale = d3.scaleLinear().domain([0, 100]).range([0, width]),
            yScale = d3.scaleLinear().domain([min, max]).range([height, 0]);


            // Title
            svg.append('text')
            .attr('x', width/2 + 100)
            .attr('y', 100)
            .attr('text-anchor', 'middle')
            .style('font-family', 'Helvetica')
            .style('font-size', 20)
            .text('Tamb Chart');
        
            // X label
            svg.append('text')
            .attr('x', width/2 + 100)
            .attr('y', height - 15 + 150)
            .attr('text-anchor', 'middle')
            .style('font-family', 'Helvetica')
            .style('font-size', 12)
            .text('Time');
        
            // Y label
            svg.append('text')
            .attr('text-anchor', 'middle')
            .attr('transform', 'translate(60,' + height + ')rotate(-90)')
            .style('font-family', 'Helvetica')
            .style('font-size', 12)
            .text('Tamb');

            // Step 6 (cio√® la funzione create Axes)
            g.append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(xScale));
        
            g.append("g")
            .call(d3.axisLeft(yScale));
        
            // Step 7
            svg.append('g')
            .selectAll("dot")
            .data(datasetTamb)
            .enter()
            .append("circle")
            .attr("cx", function (d) { return xScale(d[0]); } )
            .attr("cy", function (d) { return yScale(d[1]); } )
            .attr("r", 3)
            .attr("transform", "translate(" + 100 + "," + 100 + ")")
            .style("fill", "#CC0000");

            // Step 8        
            var line = d3.line()
            .x(function(d) { return xScale(d[0]); }) 
            .y(function(d) { return yScale(d[1]); }) 
            .curve(d3.curveMonotoneX)
        
            svg.append("path")
            .datum(datasetTamb) 
            .attr("class", "line") 
            .attr("transform", "translate(" + 100 + "," + 100 + ")")
            .attr("d", line)
            .style("fill", "none")
            .style("stroke", "#CC0000")
            .style("stroke-width", "2");
      




      /////////////////////////

      xScale = d3.scaleLinear().domain([0, 100]).range([0, width]),
                yScale = d3.scaleLinear().domain([min, max]).range([height, 0]);

                var g = svg.append("g")
                .attr("transform", "translate(" + 100 + "," + 100 + ")");
                
                g.append("g")
                .attr("transform", "translate(0," + height + ")")
                .call(d3.axisBottom(xScale));
        
                g.append("g")
                .call(d3.axisLeft(yScale));

                svg.append('g')
                    .selectAll("dot")
                    .data(dataset)
                    .enter()
                    .append("circle")
                    .attr("cx", function (d) { return xScale(d[0]); } )
                    .attr("cy", function (d) { return yScale(d[1]); } )
                    .attr("r", 3)
                    .attr("transform", "translate(" + 100 + "," + 100 + ")")
                    .style("fill", colour)
                    .attr("id", function(d,i){ return "dot" + selectedGroup})
                    .on('mouseover', function (d, i) {
                    document.getElementById("coordinates").innerHTML = "Time: " + d[0] + " , " + selectedGroup + ": " + d[1]
                    d3.select(this).style("fill", "#7CFC00")
                  
                })
                    
                    .on('mouseout', function (d, i) {
                    document.getElementById("coordinates").innerHTML = ""
                    d3.select(this).style("fill", colour)
                }); 

                var line = d3.line()
                    .x(function(d) { return xScale(d[0]); }) 
                    .y(function(d) { return yScale(d[1]); }) 
                    .curve(d3.curveMonotoneX)

                svg.append("path")
                    .datum(dataset) 
                    .attr("class", "line") 
                    .attr("transform", "translate(" + 100 + "," + 100 + ")")
                    .attr("d", line)
                    .style("fill", "none")
                    .style("stroke", colour)
                    .style("stroke-width", "2")
                    .attr("id", function(d,i){ return "path" + selectedGroup});

                svg.append('text')
                    .attr('x', width/2 + 100)
                    .attr('y', 100)
                    .attr('text-anchor', 'middle')
                    .style('font-family', 'Helvetica')
                    .style('font-size', 20)
                    .text('Grafico ' + selectedGroup);
        
                // X label
                svg.append('text')
                    .attr('x', width/2 + 100)
                    .attr('y', height - 15 + 150)
                    .attr('text-anchor', 'middle')
                    .style('font-family', 'Helvetica')
                    .style('font-size', 12)
                    .text('Time');
        
                // Y label
                svg.append('text')
                    .attr('text-anchor', 'middle')
                    .attr('transform', 'translate(60,' + height + ')rotate(-90)')
                    .style('font-family', 'Helvetica')
                    .style('font-size', 12)
                    .text(selectedGroup);